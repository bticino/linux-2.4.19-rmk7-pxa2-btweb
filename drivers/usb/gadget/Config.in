#
# USB device-side configuration
# for 2.4 kbuild, drivers/usb/gadget/Config.in
#
# Long term, this likely doesn't all belong in one directory
# Plan to split it up eventually.
#
mainmenu_option next_comment
comment 'Support for USB gadgets'

tristate 'Support for USB Gadgets' CONFIG_USB_GADGET
if [ "$CONFIG_USB_GADGET" = "y" -o "$CONFIG_USB_GADGET" = "m" ]; then
  
  #
  # really want _exactly one_ device controller driver at a time,
  # since they control compile options for gadget drivers.
  #
  choice 'USB Peripheral Controller Driver' "\
	Intel-PXA2xx/IXP4xx		CONFIG_USB_GADGET_PXA2XX \
	NetChip-2280			CONFIG_USB_GADGET_NET2280 \
	Renesas-SH7705/7727		CONFIG_USB_GADGET_SUPERH  \
	Toshiba-TC86C001(Goku-S)	CONFIG_USB_GADGET_GOKU \
	" NetChip-2280

  define_tristate CONFIG_USB_GADGET_CONTROLLER n

  if [ "$CONFIG_ARCH_PXA" = "y" -o "$CONFIG_ARCH_IXP425" = "y" ] ; then
     if [ "$CONFIG_USB_GADGET_PXA2XX" = "y" ] ; then
       define_tristate CONFIG_USB_PXA2XX $CONFIG_USB_GADGET
       define_tristate CONFIG_USB_GADGET_CONTROLLER $CONFIG_USB_PXA2XX
     fi
  fi
  if [ "$CONFIG_PCI" = "y" -a "$CONFIG_USB_GADGET_NET2280" = "y" ] ; then
    define_tristate CONFIG_USB_NET2280 $CONFIG_USB_GADGET
    define_tristate CONFIG_USB_GADGET_CONTROLLER $CONFIG_USB_NET2280
  fi
  if [ "$CONFIG_SUPERH" = "y" -a "$CONFIG_USB_GADGET_SUPERH" = "y" ] ; then
    define_tristate CONFIG_USB_SUPERH $CONFIG_USB_GADGET
    define_tristate CONFIG_USB_GADGET_CONTROLLER $CONFIG_USB_SUPERH
  fi
  if [ "$CONFIG_PCI" = "y" -a "$CONFIG_USB_GADGET_GOKU" = "y" ] ; then
    define_tristate CONFIG_USB_GOKU $CONFIG_USB_GADGET
    define_tristate CONFIG_USB_GADGET_CONTROLLER $CONFIG_USB_GOKU
  fi

  if [ "$CONFIG_USB_GADGET_CONTROLLER" = "y" -o "$CONFIG_USB_GADGET_CONTROLLER" = "m" ] ; then

  #
  # no reason not to enable more than one gadget driver module, but
  # for static linking that would make no sense since the usb model
  # has exactly one of these upstream connections and only one
  # lowest-level driver can control it.
  #
  # gadget drivers are compiled to work on specific hardware, since
  #
  # (a) gadget driver need hardware-specific configuration, like what
  #     endpoint names and numbers to use, maxpacket sizes, etc
  #
  # (b) specific hardware features like iso endpoints may be required
  #
  comment 'USB Gadget Drivers'

  # FIXME when drivers all use #ifdef CONFIG_USB_GADGET_* tests,
  # just remove all this driver-specific define_bool logic

  dep_tristate '  Gadget Zero (DEVELOPMENT)' CONFIG_USB_ZERO $CONFIG_USB_GADGET_CONTROLLER
  dep_tristate '  Ethernet Gadget (EXPERIMENTAL)' CONFIG_USB_ETH $CONFIG_USB_GADGET_CONTROLLER $CONFIG_NET
  dep_tristate '  Gadget Filesystem API (EXPERIMENTAL)' CONFIG_USB_GADGETFS $CONFIG_USB_GADGET_CONTROLLER
  dep_tristate '  File-backed Storage Gadget (DEVELOPMENT)' CONFIG_USB_FILE_STORAGE $CONFIG_USB_GADGET_CONTROLLER
  dep_mbool '    File-backed Storage Gadget test mode' CONFIG_USB_FILE_STORAGE_TEST $CONFIG_USB_FILE_STORAGE
  dep_tristate '  Serial Gadget (EXPERIMENTAL)' CONFIG_USB_G_SERIAL $CONFIG_USB_GADGET_CONTROLLER
  

    # enforce the "only one statically linked gadget driver" rule

    if [ "$CONFIG_USB_ZERO" = "y" ]; then
      # zero = y
      define_tristate CONFIG_USB_ETH n
      define_tristate CONFIG_USB_GADGETFS n
      define_tristate CONFIG_USB_FILE_STORAGE n
      define_tristate CONFIG_USB_G_SERIAL n
    fi

    if [ "$CONFIG_USB_ETH" = "y" ]; then
      define_tristate CONFIG_USB_ZERO n
      # eth = y
      define_tristate CONFIG_USB_GADGETFS n
      define_tristate CONFIG_USB_FILE_STORAGE n
      define_tristate CONFIG_USB_G_SERIAL n
    fi

    if [ "$CONFIG_USB_GADGETFS" = "y" ]; then
      define_tristate CONFIG_USB_ZERO n
      define_tristate CONFIG_USB_ETH n
      # gadgetfs = y
      define_tristate CONFIG_USB_FILE_STORAGE n
      define_tristate CONFIG_USB_G_SERIAL n
    fi

    if [ "$CONFIG_USB_FILE_STORAGE" = "y" ]; then
      define_tristate CONFIG_USB_ZERO n
      define_tristate CONFIG_USB_ETH n
      define_tristate CONFIG_USB_GADGETFS n
      # file_storage = y
      define_tristate CONFIG_USB_G_SERIAL n
    fi

    if [ "$CONFIG_USB_G_SERIAL" = "y" ]; then
      define_tristate CONFIG_USB_ZERO n
      define_tristate CONFIG_USB_ETH n
      define_tristate CONFIG_USB_GADGETFS n
      define_tristate CONFIG_USB_FILE_STORAGE n
      # g_serial = y
    fi
  fi
fi
endmenu
